name: 'Terraform'

concurrency: terraform

on:
  push:
    branches: [ main ]
    paths:
      - 'terraform/**'
      - '.github/workflows/terraform.yml'
  pull_request:
    paths:
      - 'terraform/**'
      - '.github/workflows/terraform.yml'

jobs:
  terraform:
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./terraform

    steps:
    - uses: actions/checkout@v4

    - name: Google Auth
      uses: google-github-actions/auth@v2
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Terraform Init
      run: terraform init


    - name: Extract Project ID and Service Account
      id: project
      run: |
        echo "PROJECT_ID=$(echo '${{ secrets.GCP_SA_KEY }}' | jq -r '.project_id')" >> $GITHUB_OUTPUT
        echo "SERVICE_ACCOUNT=$(echo '${{ secrets.GCP_SA_KEY }}' | jq -r '.client_email')" >> $GITHUB_OUTPUT

    - name: Terraform Plan
      env:
        TF_VAR_project_id: ${{ steps.project.outputs.PROJECT_ID }}
        TF_VAR_terraform_service_account: ${{ steps.project.outputs.SERVICE_ACCOUNT }}
        TF_VAR_discord_token: ${{ secrets.DISCORD_TOKEN }}
        TF_VAR_discord_client_id: ${{ secrets.DISCORD_CLIENT_ID }}
      run: terraform plan

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      env:
        TF_VAR_project_id: ${{ steps.project.outputs.PROJECT_ID }}
        TF_VAR_terraform_service_account: ${{ steps.project.outputs.SERVICE_ACCOUNT }}
        TF_VAR_discord_token: ${{ secrets.DISCORD_TOKEN }}
        TF_VAR_discord_client_id: ${{ secrets.DISCORD_CLIENT_ID }}
      run: terraform apply -auto-approve
